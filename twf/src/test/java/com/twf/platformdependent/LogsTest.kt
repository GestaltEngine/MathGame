package com.twf.platformdependent

import com.twf.config.CompiledConfiguration
import com.twf.config.VariableConfiguration
import com.twf.factstransformations.FactConstructorViewer
import com.twf.factstransformations.TransformationChainParser
import com.twf.factstransformations.checkTransformationChain
import com.twf.factstransformations.parseFromFactIdentifier
import com.twf.logs.MessageType
import com.twf.logs.log
import com.twf.mainpoints.checkFactsInMathML
import com.twf.org.junit.Assert
import com.twf.org.junit.Ignore
import com.twf.org.junit.Test
import com.twf.standartlibextensions.splitStringByBracketsOnTopLevel
import kotlin.test.assertEquals

class LogsTest {
    @Test
    fun lazyLog() {
        log.clear()

        log.addMessage({ "m0_1" }, MessageType.USER)
        log.addMessage({ "m0_2" })
        log.addMessage({ "m1_1" }, MessageType.USER, levelChange = 1)
        log.addMessage({ "m1_2" })
        log.addMessage({ "m2_1" }, level = 2)
        log.addMessage({ "m2_2" })
        log.addMessage({ "m2_3" })
        log.addMessage({ "m4_1" }, level = 4)
        log.addMessage({ "m4_2" })
        log.addMessage({ "m4_3" })
        log.addMessage({ "m2_4" }, level = 2)
        log.addMessage({ "m2_5" })
        log.addMessage({ "m3_1" }, MessageType.USER, levelChange = 1)
        log.addMessage({ "m3_2" })
        log.addMessage({ "m2_6" }, MessageType.USER, levelChange = -1)
        log.addMessage({ "m2_7" })
        log.addMessage({ "m0_3" }, MessageType.USER, level = 0)
        log.addMessage({ "m0_4" })
        log.addMessage({ "m1_3" }, MessageType.USER, levelChange = 1)

        assertEquals("{\"logType_USER__MaxMessageLevel_2147483647\":[{\"message\":\"m0_1\", \"details\":[{\"message\":\"m1_1\", \"details\":[{\"message\":\"root\", \"details\":[{\"message\":\"m3_1\", \"details\":[]}]},{\"message\":\"m2_6\", \"details\":[]}]}]},{\"message\":\"m0_3\", \"details\":[{\"message\":\"m1_3\", \"details\":[]}]}]}",
                log.getLogInJson(MessageType.USER))
        assertEquals("{\"logType_ALL__MaxMessageLevel_2147483647\":[{\"message\":\"m0_1\", \"details\":[]},{\"message\":\"m0_2\", \"details\":[{\"message\":\"m1_1\", \"details\":[]},{\"message\":\"m1_2\", \"details\":[{\"message\":\"m2_1\", \"details\":[]},{\"message\":\"m2_2\", \"details\":[]},{\"message\":\"m2_3\", \"details\":[{\"message\":\"root\", \"details\":[{\"message\":\"m4_1\", \"details\":[]},{\"message\":\"m4_2\", \"details\":[]},{\"message\":\"m4_3\", \"details\":[]}]}]},{\"message\":\"m2_4\", \"details\":[]},{\"message\":\"m2_5\", \"details\":[{\"message\":\"m3_1\", \"details\":[]},{\"message\":\"m3_2\", \"details\":[]}]},{\"message\":\"m2_6\", \"details\":[]},{\"message\":\"m2_7\", \"details\":[]}]}]},{\"message\":\"m0_3\", \"details\":[]},{\"message\":\"m0_4\", \"details\":[{\"message\":\"m1_3\", \"details\":[]}]}]}",
                log.getLogInJson())
    }

    @Test
    fun factViewerTests() {
        val factConstructorViewer: FactConstructorViewer = FactConstructorViewer()

        val transformationChainParser = TransformationChainParser("<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mo>[</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mi>z</mi><mo>=</mo><mi mathvariant=\"normal\">&#x3C0;</mi><mo>=</mo><mo>&gt;</mo><mo>(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mi>z</mi><mo>)</mo><mo>-</mo><mi>z</mi><mo>=</mo><mi mathvariant=\"normal\">&#x3C0;</mi><mo>-</mo><mi mathvariant=\"normal\">z</mi><mo>=</mo><mo>&gt;</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi mathvariant=\"normal\">&#x3C0;</mi><mo>-</mo><mi mathvariant=\"normal\">z</mi><mo>=</mo><mo>&gt;</mo><mfrac><mrow><mi mathvariant=\"normal\">x</mi><mo>+</mo><mi mathvariant=\"normal\">y</mi></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">&#x3C0;</mi><mo>-</mo><mi mathvariant=\"normal\">z</mi></mrow><mn>2</mn></mfrac><mo>=</mo><mo>&gt;</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>=</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>]</mo><mspace linebreak=\"newline\"/><mo>[</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>=</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>=</mo><mo>&gt;</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>=</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>=</mo><mo>&gt;</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>=</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>]</mo><mspace linebreak=\"newline\"/><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>ctg</mi><mfenced><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac></mfenced><mo>+</mo><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>=</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>)</mo><mo>+</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>ctg</mi><mfenced><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac></mfenced><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></math>",
                compiledImmediateVariableReplacements = mapOf<String, String>(*(VariableConfiguration().variableImmediateReplacementRules.map { Pair(it.left, it.right) }.toTypedArray())))
        val error = transformationChainParser.parse()
        Assert.assertEquals(null, error)
        Assert.assertEquals("AND_NODE(rules:([:AND_NODE(facts chains:(((+(x;y;z));=;(3.1415926535897932384626433832795));((+(+(x;y;z);-(z)));=;(+(3.1415926535897932384626433832795;-(z))));((+(x;y));=;(+(3.1415926535897932384626433832795;-(z))));((/(+(x;y);2));=;(/(+(3.1415926535897932384626433832795;-(z));2)));((+(/(x;2);/(y;2)));=;(+(/(3.1415926535897932384626433832795;2);-(/(z;2)))))))];[:AND_NODE(facts chains:(((+(/(x;2);/(y;2)));=;(+(/(3.1415926535897932384626433832795;2);-(/(z;2)))));((+(+(/(x;2);/(y;2));-(+(/(x;2);/(y;2);-(/(z;2))))));=;(+(+(/(3.1415926535897932384626433832795;2);-(/(z;2)));-(+(/(x;2);/(y;2);-(/(z;2)))))));((/(z;2));=;(+(/(3.1415926535897932384626433832795;2);-(+(/(x;2);/(y;2))))))))]);transformation chains:((+(ctg(/(x;2));ctg(/(y;2));ctg(/(z;2))))=(+(/(cos(/(x;2));sin(/(x;2)));/(cos(/(y;2));sin(/(y;2)));/(cos(/(z;2));sin(/(z;2)))))=(+(/(+(*(cos(/(x;2));sin(/(y;2)));*(cos(/(y;2));sin(/(x;2))));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(sin(+(/(x;2);/(y;2)));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(sin(+(/(3.1415926535897932384626433832795;2);-(/(z;2))));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(cos(/(z;2));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(*(cos(/(z;2));/(+(sin(/(z;2));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(+(sin(+(/(3.1415926535897932384626433832795;2);-(+(/(x;2);/(y;2)))));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(+(cos(+(/(x;2);/(y;2)));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(*(cos(/(x;2));cos(/(y;2)));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(ctg(/(x;2));ctg(/(y;2));ctg(/(z;2)))));)",
                transformationChainParser.root.toString())
        val identifier = factConstructorViewer.constructIdentifierByFact(transformationChainParser.root)
        val factFromIdentifier = factConstructorViewer.constructFactByIdentifier(identifier)
        Assert.assertEquals("AND_NODE(rules:([:AND_NODE(facts chains:(((+(x;y;z));=;(3.1415926535897932384626433832795));((+(+(x;y;z);-(z)));=;(+(3.1415926535897932384626433832795;-(z))));((+(x;y));=;(+(3.1415926535897932384626433832795;-(z))));((/(+(x;y);2));=;(/(+(3.1415926535897932384626433832795;-(z));2)));((+(/(x;2);/(y;2)));=;(+(/(3.1415926535897932384626433832795;2);-(/(z;2)))))))];[:AND_NODE(facts chains:(((+(/(x;2);/(y;2)));=;(+(/(3.1415926535897932384626433832795;2);-(/(z;2)))));((+(+(/(x;2);/(y;2));-(+(/(x;2);/(y;2);-(/(z;2))))));=;(+(+(/(3.1415926535897932384626433832795;2);-(/(z;2)));-(+(/(x;2);/(y;2);-(/(z;2)))))));((/(z;2));=;(+(/(3.1415926535897932384626433832795;2);-(+(/(x;2);/(y;2))))))))]);transformation chains:((+(ctg(/(x;2));ctg(/(y;2));ctg(/(z;2))))=(+(/(cos(/(x;2));sin(/(x;2)));/(cos(/(y;2));sin(/(y;2)));/(cos(/(z;2));sin(/(z;2)))))=(+(/(+(*(cos(/(x;2));sin(/(y;2)));*(cos(/(y;2));sin(/(x;2))));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(sin(+(/(x;2);/(y;2)));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(sin(+(/(3.1415926535897932384626433832795;2);-(/(z;2))));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(cos(/(z;2));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(*(cos(/(z;2));/(+(sin(/(z;2));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(+(sin(+(/(3.1415926535897932384626433832795;2);-(+(/(x;2);/(y;2)))));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(+(cos(+(/(x;2);/(y;2)));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(*(cos(/(x;2));cos(/(y;2)));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(ctg(/(x;2));ctg(/(y;2));ctg(/(z;2)))));)",
                factFromIdentifier.toString())
        Assert.assertEquals(identifier, factConstructorViewer.constructIdentifierByFact(factFromIdentifier))


        val compiledConfiguration = CompiledConfiguration()
        val factComporator = compiledConfiguration.factComporator
        val checkingResult = transformationChainParser.root.checkTransformationChain(
                factComporator, false,
                listOf(parseFromFactIdentifier("x+y+z;ec;=;ec;pi")!!))
        val identifierAfterCheck = factConstructorViewer.constructIdentifierByFact(transformationChainParser.root)
        val factFromIdentifierAfterCheck = factConstructorViewer.constructFactByIdentifier(identifierAfterCheck)
        Assert.assertEquals("AND_NODE(rules:([:AND_NODE(facts chains:(((+(x;y;z));=;(3.1415926535897932384626433832795));((+(+(x;y;z);-(z)));=;(+(3.1415926535897932384626433832795;-(z))));((+(x;y));=;(+(3.1415926535897932384626433832795;-(z))));((/(+(x;y);2));=;(/(+(3.1415926535897932384626433832795;-(z));2)));((+(/(x;2);/(y;2)));=;(+(/(3.1415926535897932384626433832795;2);-(/(z;2)))))))];[:AND_NODE(facts chains:(((+(/(x;2);/(y;2)));=;(+(/(3.1415926535897932384626433832795;2);-(/(z;2)))));((+(+(/(x;2);/(y;2));-(+(/(x;2);/(y;2);-(/(z;2))))));=;(+(+(/(3.1415926535897932384626433832795;2);-(/(z;2)));-(+(/(x;2);/(y;2);-(/(z;2)))))));((/(z;2));=;(+(/(3.1415926535897932384626433832795;2);-(+(/(x;2);/(y;2))))))))]);transformation chains:((+(ctg(/(x;2));ctg(/(y;2));ctg(/(z;2))))=(+(/(cos(/(x;2));sin(/(x;2)));/(cos(/(y;2));sin(/(y;2)));/(cos(/(z;2));sin(/(z;2)))))=(+(/(+(*(cos(/(x;2));sin(/(y;2)));*(cos(/(y;2));sin(/(x;2))));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(sin(+(/(x;2);/(y;2)));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(sin(+(/(3.1415926535897932384626433832795;2);-(/(z;2))));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(+(/(cos(/(z;2));*(sin(/(x;2));sin(/(y;2))));/(cos(/(z;2));sin(/(z;2)))))=(*(cos(/(z;2));/(+(sin(/(z;2));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(+(sin(+(/(3.1415926535897932384626433832795;2);-(+(/(x;2);/(y;2)))));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(+(cos(+(/(x;2);/(y;2)));*(sin(/(x;2));sin(/(y;2))));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(cos(/(z;2));/(*(cos(/(x;2));cos(/(y;2)));*(sin(/(x;2));sin(/(y;2));sin(/(z;2))))))=(*(ctg(/(x;2));ctg(/(y;2));ctg(/(z;2)))));)",
                factFromIdentifier.toString())
        Assert.assertEquals(identifierAfterCheck, factConstructorViewer.constructIdentifierByFact(factFromIdentifierAfterCheck))
    }

    @Test
    fun testSplitStringByBracketsOnTopLevel() {
        val splited = splitStringByBracketsOnTopLevel("FACT_TRANSFORMATION_CHAINS{{{EXPRESSION_COMPARISON{(+(x;y;z))}{=}{(&#x3C0)}}{EXPRESSION_COMPARISON{(+(+(x;y;z);-(z)))}{=}{(+(&#x3C0;-(z)))}}{EXPRESSION_COMPARISON{(+(x;y))}{=}{(+(&#x3C0;-(z)))}}{EXPRESSION_COMPARISON{(/(+(x;y);2))}{=}{(/(+(&#x3C0;-(z));2))}}{EXPRESSION_COMPARISON{(+(/(x;2);/(y;2)))}{=}{(+(/(&#x3C0;2);-(/(z;2))))}}}}EXPRESSION_TRANSFORMATION_CHAINS{}RULES{}IN_FACTS{}OUT_FACTS{}",
                '{', '}')
        Assert.assertEquals("FACT_TRANSFORMATION_CHAINS", splited.name)
        Assert.assertEquals("{{EXPRESSION_COMPARISON{(+(x;y;z))}{=}{(&#x3C0)}}{EXPRESSION_COMPARISON{(+(+(x;y;z);-(z)))}{=}{(+(&#x3C0;-(z)))}}{EXPRESSION_COMPARISON{(+(x;y))}{=}{(+(&#x3C0;-(z)))}}{EXPRESSION_COMPARISON{(/(+(x;y);2))}{=}{(/(+(&#x3C0;-(z));2))}}{EXPRESSION_COMPARISON{(+(/(x;2);/(y;2)))}{=}{(+(/(&#x3C0;2);-(/(z;2))))}}}", splited.list.joinToString { it })
        Assert.assertEquals(334, splited.endPosition)
    }

    @Ignore
    @Test
    fun runWithLogPrinting() {
        checkFactsInMathML("<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mo>[</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mi>z</mi><mo>=</mo><mi mathvariant=\"normal\">&#x3C0;</mi><mo>=</mo><mo>&gt;</mo><mo>(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mi>z</mi><mo>)</mo><mo>-</mo><mi>z</mi><mo>=</mo><mi mathvariant=\"normal\">&#x3C0;</mi><mo>-</mo><mi mathvariant=\"normal\">z</mi><mo>=</mo><mo>&gt;</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi mathvariant=\"normal\">&#x3C0;</mi><mo>-</mo><mi mathvariant=\"normal\">z</mi><mo>=</mo><mo>&gt;</mo><mfrac><mrow><mi mathvariant=\"normal\">x</mi><mo>+</mo><mi mathvariant=\"normal\">y</mi></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">&#x3C0;</mi><mo>-</mo><mi mathvariant=\"normal\">z</mi></mrow><mn>2</mn></mfrac><mo>=</mo><mo>&gt;</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>=</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>]</mo><mspace linebreak=\"newline\"/><mo>[</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>=</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>=</mo><mo>&gt;</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>=</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>=</mo><mo>&gt;</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>=</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>]</mo><mspace linebreak=\"newline\"/><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>ctg</mi><mfenced><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac></mfenced><mo>+</mo><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>=</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">&#x3C0;</mi><mn>2</mn></mfrac><mo>-</mo><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>)</mo><mo>+</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>+</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mo>+</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mspace linebreak=\"newline\"/><mo>=</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo><mfenced><mfrac><mrow><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>cos</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo></mrow><mrow><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac><mo>)</mo><mi>sin</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></mrow></mfrac></mfenced><mo>=</mo><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">x</mi><mn>2</mn></mfrac><mo>)</mo><mi>ctg</mi><mfenced><mfrac><mi mathvariant=\"normal\">y</mi><mn>2</mn></mfrac></mfenced><mi>ctg</mi><mo>(</mo><mfrac><mi mathvariant=\"normal\">z</mi><mn>2</mn></mfrac><mo>)</mo></math>")
        val json = log.getLogInJson()
        val plainText = log.getLogInPlainText()
    }

    @Test
    fun oldIdentifierToNew() {
        val factConstructorViewer: FactConstructorViewer = FactConstructorViewer()
        val fact = parseFromFactIdentifier("3+4*cos(2*x)+cos(4*x);ec;=;ec;8*cos(x)^4")!!
        val newIdentifier = factConstructorViewer.constructIdentifierByFact(fact)
        print(newIdentifier)
    }
}