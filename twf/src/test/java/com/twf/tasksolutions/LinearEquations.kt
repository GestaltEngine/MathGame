package com.twf.tasksolutions

import com.twf.factstransformations.FactConstructorViewer
import com.twf.factstransformations.parseFromFactIdentifier
import com.twf.logs.log
import com.twf.mainpoints.checkFactsInMathML
import com.twf.mainpoints.configSeparator
import com.twf.org.junit.Assert
import com.twf.org.junit.Ignore
import com.twf.org.junit.Test

class LinearEquations {
    val wellKnownFunctions = "" +
            "${configSeparator}0$configSeparator" +
            "${configSeparator}1$configSeparator" +
            "+$configSeparator-1$configSeparator" +
            "-$configSeparator-1$configSeparator" +
            "*$configSeparator-1$configSeparator" +
            "/$configSeparator-1$configSeparator" +
            "^$configSeparator-1"

    @Test
    fun correctSolution() {
        val result = checkFactsInMathML(
                brushedMathML = "<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>8</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>a</mi><mo>=</mo><mn>5</mn><mo>*</mo><mi>b</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mn>4</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>5</mn><mo>*</mo><mi>b</mi><mo>-</mo><mn>4</mn><mo>*</mo><mi>a</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mi>x</mi><mo>=</mo><mn>1</mn><mo>.</mo><mn>25</mn><mo>*</mo><mi>b</mi><mo>-</mo><mi>a</mi><mo>-</mo><msup><mi>a</mi><mn>2</mn></msup></math>",
                wellKnownFunctions = wellKnownFunctions,
                expressionTransformationRules = " ",
                targetFactIdentifier = "",
                targetVariablesNames = "x",
                minNumberOfMultipliersInAnswer = "",
                additionalFactsIdentifiers = "EXPRESSION_COMPARISON{(+(*(8;x);*(4;a)))}{=}{(+(*(5;b);*(4;x);-(*(4;^(a;2)))))}"
        )

        val logRef = log.getLogInPlainText()

        assert(!result.contains("Error"))
        assert(!result.contains("#FF"))
        Assert.assertEquals("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" mathcolor=\"#7F00FF\"><mn>8</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>a</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>5</mn><mo>*</mo><mi>b</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mn>4</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>5</mn><mo>*</mo><mi>b</mi><mo>-</mo><mn>4</mn><mo>*</mo><mi>a</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mi>x</mi><mo>=</mo><mn>1</mn><mo>.</mo><mn>25</mn><mo>*</mo><mi>b</mi><mo>-</mo><mi>a</mi><mo>-</mo><msup><mi>a</mi><mn>2</mn></msup></math>",
                result)
    }

    @Test
    fun multiplicationOnNull() {
        val result = checkFactsInMathML(
                brushedMathML = "<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>8</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>a</mi><mo>=</mo><mn>5</mn><mo>*</mo><mi>b</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mn>4</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>5</mn><mo>*</mo><mi>b</mi><mo>-</mo><mn>4</mn><mo>*</mo><mi>a</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mn>0</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>0</mn><mo>*</mo><mi>a</mi><mo>+</mo><mn>0</mn><mo>*</mo><mi>b</mi><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mi>x</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi></math>",
                wellKnownFunctions = wellKnownFunctions,
                expressionTransformationRules = " ",
                targetFactIdentifier = "",
                targetVariablesNames = "x",
                minNumberOfMultipliersInAnswer = "",
                additionalFactsIdentifiers = "EXPRESSION_COMPARISON{(+(*(8;x);*(4;a)))}{=}{(+(*(5;b);*(4;x);-(*(4;^(a;2)))))}"
        )

        val logRef = log.getLogInPlainText()

        assert(result.contains("Error"))
        assert(result.contains("#FF"))
        Assert.assertEquals("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" mathcolor=\"#7F00FF\"><mn>8</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>a</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>5</mn><mo>*</mo><mi>b</mi><mo>+</mo><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mn>4</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>5</mn><mo>*</mo><mi>b</mi><mo>-</mo><mn>4</mn><mo>*</mo><mi>a</mi><mo>-</mo><mn>4</mn><mo>*</mo><msup><mi>a</mi><mn>2</mn></msup><mrow mathvariant=\"bold\" mathcolor=\"#FF0000\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mn>0</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>0</mn><mo>*</mo><mi>a</mi><mo>+</mo><mn>0</mn><mo>*</mo><mi>b</mi><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mi>x</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: Unclear transformation between '(*(4;x));=;(+(*(5;b);-(*(4;a));-(*(4;^(a;2)))))' and '(*(0;x));=;(+(*(0;a);*(0;b)))' </mtext></math>",
                result)
    }

    @Test
    fun correctSystemSolution() {
        val result = checkFactsInMathML(
                brushedMathML = "<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable><mo>=</mo><mo>&gt;</mo></mrow></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable><mo>=</mo><mo>&gt;</mo></mrow></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable><mo>=</mo><mo>&gt;</mo></mrow></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable><mo>=</mo><mo>&gt;</mo></mrow></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mi>a</mi></mtd></mtr></mtable></mfenced></math>",
                wellKnownFunctions = wellKnownFunctions,
                expressionTransformationRules = " ",
                targetFactIdentifier = "",
                targetVariablesNames = "x;;;y",
                minNumberOfMultipliersInAnswer = "",
                additionalFactsIdentifiers = "EXPRESSION_COMPARISON{(+(*(2;x);*(3;y)))}{=}{(*(7;a))};;;EXPRESSION_COMPARISON{(+(*(4;x);-(*(2;y))))}{=}{(*(6;a))}"
        )

        val logRef = log.getLogInPlainText()

        assert(!result.contains("Error"))
        assert(!result.contains("#FF"))
        Assert.assertEquals("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" mathcolor=\"#7F00FF\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mi>a</mi></mtd></mtr></mtable></mfenced></math>",
                result)
    }

    @Test
    fun wrongSystemSolution() {
        val result = checkFactsInMathML(
                brushedMathML = "<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>3</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mi>a</mi></mtd></mtr></mtable></mfenced></math>",
                wellKnownFunctions = wellKnownFunctions,
                expressionTransformationRules = " ",
                targetFactIdentifier = "",
                targetVariablesNames = "x;;;y",
                minNumberOfMultipliersInAnswer = "",
                additionalFactsIdentifiers = "EXPRESSION_COMPARISON{(+(*(2;x);*(3;y)))}{=}{(*(7;a))};;;EXPRESSION_COMPARISON{(+(*(4;x);-(*(2;y))))}{=}{(*(6;a))}"
        )

        val logRef = log.getLogInPlainText()

        assert(result.contains("Error"))
        assert(result.contains("#FF"))
        Assert.assertEquals("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" mathcolor=\"#7F00FF\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#FF0000\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>3</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: Unclear transformation between 'AND_NODE(facts chains:(((+(*(2;x);*(3;y)));=;(*(7;a)));((+(*(2;x);-(*(3;a))));=;(y)))in:((+(*(2;x);*(3;y)));=;(*(7;a));(+(*(2;x);-(*(3;a))));=;(y))out:((+(*(2;x);*(3;y)));=;(*(7;a));(+(*(2;x);-(*(3;a))));=;(y)))' and 'AND_NODE(facts chains:(((+(*(2;x);*(3;+(*(3;x);-(*(3;a))))));=;(*(7;a)));((y);=;(+(*(2;x);-(*(3;a))))))in:((+(*(2;x);*(3;+(*(3;x);-(*(3;a))))));=;(*(7;a));(y);=;(+(*(2;x);-(*(3;a))))))' </mtext></math>",
                result)
    }

    @Test
    fun wrongNotFullSystemSolution() {
        val result = checkFactsInMathML(
                brushedMathML = "<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#FF0000\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#FF0000\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo>=</mo><mo>&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: Unclear transformation between 'AND_NODE(facts chains:(((+(*(2;x);*(3;y)));=;(*(7;a)));((+(*(2;x);-(*(3;a))));=;(y)))in:((+(*(2;x);*(3;y)));=;(*(7;a));(+(*(2;x);-(*(3;a))));=;(y))out:((+(*(2;x);*(3;y)));=;(*(7;a));(+(*(2;x);-(*(3;a))));=;(y)))' and 'AND_NODE(facts chains:(((+(*(2;x);*(3;+(*(2;x);-(*(3;a))))));=;(*(7;a)));((y);=;(+(*(2;x);-(*(3;a))))))in:((+(*(2;x);*(3;+(*(2;x);-(*(3;a))))));=;(*(7;a));(y);=;(+(*(2;x);-(*(3;a))))))'</mtext></math>",
                wellKnownFunctions = wellKnownFunctions,
                expressionTransformationRules = " ",
                targetFactIdentifier = "",
                targetVariablesNames = "x;;;y",
                minNumberOfMultipliersInAnswer = "",
                additionalFactsIdentifiers = "EXPRESSION_COMPARISON{(+(*(2;x);*(3;y)))}{=}{(*(7;a))};;;EXPRESSION_COMPARISON{(+(*(4;x);-(*(2;y))))}{=}{(*(6;a))}"
        )

        val logRef = log.getLogInPlainText()

        assert(result.contains("Error"))
        assert(result.contains("#FF"))
        Assert.assertEquals("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" mathcolor=\"#7F00FF\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: right part of the result contains unknown variables: 'x'</mtext></math>",
                result)
    }

    @Test
    fun wrongSystemSolutionDisappearedY() {
        val result = checkFactsInMathML(
                brushedMathML = "<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mrow></mfenced><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: ERROR: right part of result contains unknown variables: 'x'</mtext></math>",
                wellKnownFunctions = wellKnownFunctions,
                expressionTransformationRules = " ",
                targetFactIdentifier = "",
                targetVariablesNames = "x;;;y",
                minNumberOfMultipliersInAnswer = "",
                additionalFactsIdentifiers = "EXPRESSION_COMPARISON{(+(*(2;x);*(3;y)))}{=}{(*(7;a))};;;EXPRESSION_COMPARISON{(+(*(4;x);-(*(2;y))))}{=}{(*(6;a))}"
        )

        val logRef = log.getLogInPlainText()

        assert(result.contains("Error"))
        assert(result.contains("#FF"))
        Assert.assertEquals("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" mathcolor=\"#7F00FF\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#FF0000\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mrow></mfenced><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: Unclear transformation between 'AND_NODE(facts chains:(((*(8;x));=;(*(16;a)));((y);=;(+(*(2;x);-(*(3;a))))))in:((*(8;x));=;(*(16;a));(y);=;(+(*(2;x);-(*(3;a)))))out:((*(8;x));=;(*(16;a));(y);=;(+(*(2;x);-(*(3;a))))))' and 'AND_NODE(facts chains:(((x);=;(*(2;a))))in:((x);=;(*(2;a))))' </mtext></math>",
                result)
    }

    @Test
    fun wrongSystemSolutionSignsInColoringAdded() {
        val result = checkFactsInMathML(
                brushedMathML = "<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mo mathvariant=\"bold\" mathcolor=\"#007F00\">=</mo><mo mathvariant=\"bold\" mathcolor=\"#007F00\">&gt;</mo><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi><mo>+</mo><mn>1</mn></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mrow></mfenced><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: Unclear transformation between 'AND_NODE(facts chains:(((*(8;x));=;(*(16;a)));((y);=;(+(*(2;x);-(*(3;a))))))in:((*(8;x));=;(*(16;a));(y);=;(+(*(2;x);-(*(3;a)))))out:((*(8;x));=;(*(16;a));(y);=;(+(*(2;x);-(*(3;a))))))' and 'AND_NODE(facts chains:(((x);=;(*(2;a))))in:((x);=;(*(2;a))))'</mtext></math>",
                wellKnownFunctions = wellKnownFunctions,
                expressionTransformationRules = " ",
                targetFactIdentifier = "",
                targetVariablesNames = "x;;;y",
                minNumberOfMultipliersInAnswer = "",
                additionalFactsIdentifiers = "EXPRESSION_COMPARISON{(+(*(2;x);*(3;y)))}{=}{(*(7;a))};;;EXPRESSION_COMPARISON{(+(*(4;x);-(*(2;y))))}{=}{(*(6;a))}"
        )

        val logRef = log.getLogInPlainText()

        assert(result.contains("Error"))
        assert(result.contains("#FF"))
        Assert.assertEquals("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" mathcolor=\"#7F00FF\"><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>4</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>2</mn><mo>*</mo><mi>y</mi><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo></mrow><mn>6</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mi>y</mi><mo>=</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mi>y</mi><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>=</mo><mi>y</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#007F00\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>2</mn><mo>*</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo>*</mo><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi><mo>)</mo><mo>=</mo><mn>7</mn><mo>*</mo><mi>a</mi></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mrow mathvariant=\"bold\" mathcolor=\"#FF0000\"><mo>=</mo><mo>&gt;</mo></mrow><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mtable columnalign=\"left\"><mtr><mtd><mn>8</mn><mo>*</mo><mi>x</mi><mo>=</mo><mn>16</mn><mo>*</mo><mi>a</mi><mo>+</mo><mn>1</mn></mtd></mtr><mtr><mtd><mi>y</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>-</mo><mn>3</mn><mo>*</mo><mi>a</mi></mtd></mtr></mtable></mfenced><mspace linebreak=\"newline\"/><mfenced open=\"{\" close=\"\"><mrow><mi>x</mi><mo>=</mo><mn>2</mn><mo>*</mo><mi>a</mi></mrow></mfenced><mspace linebreak=\"newline\"/><mtext mathvariant=\"bold\" mathcolor=\"#FF0000\">Error: Unclear transformation between 'AND_NODE(facts chains:(((+(*(2;x);*(3;+(*(2;x);-(*(3;a))))));=;(*(7;a)));((y);=;(+(*(2;x);-(*(3;a))))))in:((+(*(2;x);*(3;+(*(2;x);-(*(3;a))))));=;(*(7;a));(y);=;(+(*(2;x);-(*(3;a)))))out:((+(*(2;x);*(3;+(*(2;x);-(*(3;a))))));=;(*(7;a));(y);=;(+(*(2;x);-(*(3;a))))))' and 'AND_NODE(facts chains:(((*(8;x));=;(+(*(16;a);1)));((y);=;(+(*(2;x);-(*(3;a))))))in:((*(8;x));=;(+(*(16;a);1));(y);=;(+(*(2;x);-(*(3;a))))))' </mtext></math>",
                result)
    }

    @Test
    @Ignore
    fun oldIdentifierToNew() {
        val factConstructorViewer: FactConstructorViewer = FactConstructorViewer()
        val fact = parseFromFactIdentifier("4*x-2*y;ec;=;ec;6*a")!!
        val newIdentifier = factConstructorViewer.constructIdentifierByFact(fact)
        print(newIdentifier)
    }
}