{
  "gameSpace": "",
  "gameCode": "logical_calculus_combo",
  "name": "Logical Calculus Combo",
  "version": 10,
  "levels":[
    {
      "levelCode": "logical_calculus_combo__Level_1_Prove",
      "name": "Level 1 Prove",
      "difficulty": 1.0,
      "type": "set",
      "stepsNum": 2,
      "time": 50,
      "originalExpression": "(and(or(A;not(B));or(A;not(C))))",
      "finalExpression": "(or(A;not(or(B;C))))",
      "rules":[
        {"rulePack": "SetBase"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_2_CNF",
      "name": "Level 2 CNF",
      "difficulty": 2.0,
      "type": "set",
      "stepsNum": 3,
      "time": 50,
      "originalExpression": "(set-(A;set-(A;B)))",
      "finalExpression": "CNF",
      "finalPattern": "and : (or) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_3_Prove",
      "name": "Level 3 Prove",
      "difficulty": 2.0,
      "type": "set",
      "stepsNum": 4,
      "time": 90,
      "originalExpression": "(or(A;and(A;B)))",
      "finalExpression": "(A)",
      "rules":[
        {"rulePack": "SetBase"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_4_Prove",
      "name": "Level 4 Prove",
      "difficulty": 2.0,
      "type": "set",
      "stepsNum": 4,
      "time": 60,
      "originalExpression": "(or(set-(not(A);B);C))",
      "finalExpression": "(implic(or(A;B);C))",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_5_DNF",
      "name": "Level 5 DNF",
      "difficulty": 2.0,
      "type": "set",
      "stepsNum": 4,
      "time": 60,
      "originalExpression": "(implic(implic(A;not(B));C))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_6_3-CNF",
      "name": "Level 6 3-CNF",
      "difficulty": 2.0,
      "type": "set",
      "stepsNum": 4,
      "time": 90,
      "originalExpression": "(not(and(A;set-(B;C))))",
      "finalExpression": "3-CNF",
      "finalPattern": "and : (or : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_7_2-CNF",
      "name": "Level 7 2-CNF",
      "difficulty": 2.0,
      "type": "set",
      "stepsNum": 7,
      "time": 70,
      "originalExpression": "(not(or(and(not(A);not(B));and(not(C);not(D)))))",
      "finalExpression": "2-CNF",
      "finalPattern": "and : (or : 2) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_8_Prove",
      "name": "Level 8 Prove",
      "difficulty": 3.0,
      "type": "set",
      "stepsNum": 7,
      "time": 90,
      "originalExpression": "(implic(and(A;B);or(not(C);B)))",
      "finalExpression": "(implic(A;implic(B;implic(C;B))))",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_9_Resolution",
      "name": "Level 9 Resolution",
      "difficulty": 3.0,
      "type": "set",
      "stepsNum": 6,
      "time": 120,
      "originalExpression": "(and(A;B;implic(A;C);not(C)))",
      "finalExpression": "(0)",
      "finalPattern": "",
      "rules":[
        {"rulePack": "SetResolution"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_10_DNF",
      "name": "Level 10 DNF",
      "difficulty": 3.0,
      "type": "set",
      "stepsNum": 5,
      "time": 90,
      "originalExpression": "(not(or(A;B;C)))",
      "finalExpression": "3-DNF",
      "finalPattern": "or : (and : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_11_Prove",
      "name": "Level 11 Prove",
      "difficulty": 3.0,
      "type": "set",
      "stepsNum": 6,
      "time": 90,
      "originalExpression": "(set-(not(and(A;B));B))",
      "finalExpression": "(not(B))",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_12_Prove",
      "name": "Level 12 Prove",
      "difficulty": 4.0,
      "type": "set",
      "stepsNum": 8,
      "time": 150,
      "originalExpression": "(or(set-(set-(A;B);C);or(not(B);C)))",
      "finalExpression": "(implic(implic(A;or(B;C));implic(B;C)))",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_13_DNF",
      "name": "Level 13 DNF",
      "difficulty": 4.0,
      "type": "set",
      "stepsNum": 10,
      "time": 200,
      "originalExpression": "(implic(and(implic(C;B);not(or(A;B;C)));C))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_14_DNF",
      "name": "Level 14 DNF",
      "difficulty": 4.0,
      "type": "set",
      "stepsNum": 9,
      "time": 200,
      "originalExpression": "(and(not(or(and(A;B;or(and(B;C);not(A)));A));and(B;A)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_15_Prove",
      "name": "Level 15 Prove",
      "difficulty": 3.0,
      "type": "set",
      "stepsNum": 13,
      "time": 200,
      "originalExpression": "(implic(or(A;B);and(A;B)))",
      "finalExpression": "(and(not(set-(A;B));not(set-(B;A))))",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_16_Prove",
      "name": "Level 16 Prove",
      "difficulty": 4.0,
      "type": "set",
      "stepsNum": 22,
      "time": 300,
      "originalExpression": "(set-(or(A;B);and(implic(A;B);implic(B;A))))",
      "finalExpression": "(or(set-(A;B);set-(B;A)))",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_17_Prove",
      "name": "Level 17 Prove",
      "difficulty": 4.0,
      "type": "set",
      "stepsNum": 10,
      "time": 200,
      "originalExpression": "(implic(implic(set-(A;C);D);set-(D;B)))",
      "finalExpression": "(or(set-(D;B);set-(A;or(C;D))))",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_18_DNF",
      "name": "Level 18 DNF",
      "difficulty": 5.0,
      "type": "set",
      "stepsNum": 22,
      "time": 300,
      "originalExpression": "(implic(implic(implic(implic(A;B);C);implic(implic(B;C);A));implic(implic(C;A);B)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_19_Resolution",
      "name": "Level 19 Resolution",
      "difficulty": 5.0,
      "type": "set",
      "stepsNum": 7,
      "time": 250,
      "originalExpression": "(and(not(A);implic(not(A);B);implic(B;C);not(C)))",
      "finalExpression": "(0)",
      "finalPattern": "",
      "rules":[
        {"rulePack": "SetResolution"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_20_Resolution",
      "name": "Level 20 Resolution",
      "difficulty": 5.0,
      "type": "set",
      "stepsNum": 9,
      "time": 200,
      "originalExpression": "(and(or(A;C);implic(D;C);implic(A;D);not(C)))",
      "finalExpression": "(0)",
      "finalPattern": "",
      "rules":[
        {"rulePack": "SetResolution"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_21_Resolution",
      "name": "Level 21 Resolution",
      "difficulty": 5.0,
      "type": "set",
      "stepsNum": 16,
      "time": 350,
      "originalExpression": "(and(or(A;B;C);implic(A;or(C;D));implic(C;or(B;D));not(B);not(D)))",
      "finalExpression": "(0)",
      "finalPattern": "",
      "rules":[
        {"rulePack": "SetResolution"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_22_Resolution",
      "name": "Level 22 Resolution",
      "difficulty": 5.0,
      "type": "set",
      "stepsNum": 11,
      "time": 300,
      "originalExpression": "(and(or(A;B);implic(not(C);not(A));implic(not(D);not(B));not(or(C;D));not(or(not(C);not(D)))))",
      "finalExpression": "(0)",
      "finalPattern": "",
      "rules":[
        {"rulePack": "SetResolution"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_23_DNF",
      "name": "Level 23 DNF",
      "difficulty": 6.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(and(or(A;B;not(C));or(A;not(B);C);or(not(A);B;C)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_24_CNF",
      "name": "Level 24 CNF",
      "difficulty": 6.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(or(and(A;not(B);not(C));and(A;not(B);C);and(not(A);B;C)))",
      "finalExpression": "CNF",
      "finalPattern": "and : (or) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_25_CNF",
      "name": "Level 25 CNF",
      "difficulty": 6.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(or(and(A;not(B));and(C;not(D));and(not(A);B);and(not(C);D)))",
      "finalExpression": "CNF",
      "finalPattern": "and : (or) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_26_DNF",
      "name": "Level 26 DNF",
      "difficulty": 6.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(and(or(A;not(B));or(C;not(D));or(not(A);B);or(not(C);D)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_27_CNF",
      "name": "Level 27 CNF",
      "difficulty": 6.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(or(and(A;not(B);C;not(D));and(not(A);B;not(C);D)))",
      "finalExpression": "CNF",
      "finalPattern": "and : (or) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_28_DNF",
      "name": "Level 28 DNF",
      "difficulty": 6.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(and(or(A;not(B);C;not(D));or(not(A);B;not(C);D)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_29_3-DNF",
      "name": "Level 29 3-DNF",
      "difficulty": 7.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(and(or(A;B;not(C));or(A;not(B);C);or(not(A);B;C)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_30_3-CNF",
      "name": "Level 30 3-CNF",
      "difficulty": 7.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(or(and(A;not(B);not(C));and(A;not(B);C);and(not(A);B;C)))",
      "finalExpression": "CNF",
      "finalPattern": "and : (or : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_31_3-CNF",
      "name": "Level 31 3-CNF",
      "difficulty": 7.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(or(and(A;not(B));and(C;not(D));and(not(A);B);and(not(C);D)))",
      "finalExpression": "CNF",
      "finalPattern": "and : (or : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_32_3-DNF",
      "name": "Level 32 3-DNF",
      "difficulty": 7.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(and(or(A;not(B));or(C;not(D));or(not(A);B);or(not(C);D)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_33_3-CNF",
      "name": "Level 33 3-CNF",
      "difficulty": 7.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(or(and(A;not(B);C;not(D));and(not(A);B;not(C);D)))",
      "finalExpression": "CNF",
      "finalPattern": "and : (or : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    },
    {
      "levelCode": "logical_calculus_combo__Level_34_3-DNF",
      "name": "Level 34 3-DNF",
      "difficulty": 7.0,
      "type": "set",
      "stepsNum": 36,
      "time": 400,
      "originalExpression": "(and(or(A;not(B);C;not(D));or(not(A);B;not(C);D)))",
      "finalExpression": "DNF",
      "finalPattern": "or : (and : 3) : : : not",
      "rules":[
        {"rulePack": "SetBase"},
        {"rulePack": "SetAbsorptionLawReduction"},
        {"rulePack": "SetMultiArgumentAnd"},
        {"rulePack": "SetMultiArgumentOr"}
      ]
    }
  ],
  "rulePacks":[
    {
      "name": "SetBase",
      "rules":[
        {"rulePack": "SetTrivialLetters"},

        {"rulePack": "SetThreeСommutativity"},
        {"rulePack": "SetThreeAssociativity"},

        {"rulePack": "SetDeMorgan"},

        {"rulePack": "SetImplication"},
        {"rulePack": "SetDifference"},

        {"rulePack": "SetEmptyAndUniverse"}
      ]
    },
    {
      "name": "SetThreeСommutativity",
      "type": "set",
      "rules":[
        {"left": "(or(A;or(B;C)))","right": "(or(A;B;C))"},
        {"left": "(or(A;B;C))","right": "(or(A;or(B;C)))"},
        {"left": "(or(A;or(B;C)))","right": "(or(or(A;B);C))"},
        {"left": "(or(or(A;B);C))","right": "(or(A;or(B;C)))"},
        {"left": "(or(or(A;B);C))","right": "(or(A;B;C))"},
        {"left": "(or(A;B;C))","right": "(or(or(A;B);C))"},

        {"left": "(and(A;and(B;C)))","right": "(and(A;B;C))"},
        {"left": "(and(A;B;C))","right": "(and(A;and(B;C)))"},
        {"left": "(and(A;and(B;C)))","right": "(and(and(A;B);C))"},
        {"left": "(and(and(A;B);C))","right": "(and(A;and(B;C)))"},
        {"left": "(and(and(A;B);C))","right": "(and(A;B;C))"},
        {"left": "(and(A;B;C))","right": "(and(and(A;B);C))"}
      ]
    },
    {
      "name": "SetThreeAssociativity",
      "type": "set",
      "rules":[
        {"left": "(or(A;and(B;C)))","right": "(and(or(A;B);or(A;C)))"},
        {"left": "(or(and(B;C);A))","right": "(and(or(B;A);or(C;A)))"},
        {"left": "(and(or(A;B);or(A;C)))","right": "(or(A;and(B;C)))"},
        {"left": "(and(or(B;C);or(A;C)))","right": "(or(and(B;A);C))"},
        {"left": "(and(A;or(B;C)))","right": "(or(and(A;B);and(A;C)))"},
        {"left": "(and(or(B;C);A))","right": "(or(and(B;A);and(C;A)))"},
        {"left": "(or(and(A;B);and(A;C)))","right": "(and(A;or(B;C)))"},
        {"left": "(or(and(B;C);and(A;C)))","right": "(and(or(B;A);C))"}
      ]
    },
    {
      "name": "SetTwoСommutativity",
      "type": "set",
      "rules":[
        {"left": "(and(A;B))","right": "(and(B;A))"},
        {"left": "(or(A;B))","right": "(or(B;A))"}
      ]
    },
    {
      "name": "SetTrivialLetters",
      "type": "set",
      "rules":[
        {"rulePack": "SetTwoСommutativity"},
        {"left": "(not(not(A)))","right": "(A)"},
        {"left": "(A)","right": "(not(not(A)))"},
        {"left": "(or(A;A))","right": "(A)"},
        {"left": "(A)","right": "(or(A;A))"},
        {"left": "(and(A;A))","right": "(A)"},
        {"left": "(A)","right": "(and(A;A))"}
      ]
    },
    {
      "name": "SetDeMorgan",
      "type": "set",
      "rules":[
        {"left": "(not(and(A;B)))","right": "(or(not(A);not(B)))"},
        {"left": "(or(not(A);not(B)))","right": "(not(and(A;B)))"},
        {"left": "(not(or(A;B)))","right": "(and(not(A);not(B)))"},
        {"left": "(and(not(A);not(B)))","right": "(not(or(A;B)))"}
      ]
    },
    {
      "name": "SetImplication",
      "type": "set",
      "rules":[
        {"left": "(or(not(A);B))","right": "(implic(A;B))"},
        {"left": "(or(B;not(A)))","right": "(implic(A;B))"},
        {"left": "(implic(A;B))","right": "(or(not(A);B))"}
      ]
    },
    {
      "name": "SetDifference",
      "type": "set",
      "rules":[
        {"left": "(and(A;not(B)))","right": "(set-(A;B))"},
        {"left": "(and(not(B);A))","right": "(set-(A;B))"},
        {"left": "(set-(A;B))","right": "(and(A;not(B)))"}
      ]
    },
    {
      "name": "SetDifferenceImplication",
      "type": "set",
      "rules":[
        {"left": "(set-(A;B))","right": "(not(implic(A;B)))"},
        {"left": "(not(implic(A;B)))","right": "(set-(A;B))"},
        {"left": "(implic(A;B))","right": "(not(set-(A;B)))"},
        {"left": "(not(set-(A;B)))","right": "(implic(A;B))"}
      ]
    },
    {
      "name": "SetAbsorptionLawReduction",
      "type": "set",
      "rules":[
        {"left": "(and(A;or(A;B)))","right": "(A)"},
        {"left": "(or(A;and(A;B)))","right": "(A)"},
        {"left": "(and(A;or(B;A)))","right": "(A)"},
        {"left": "(or(A;and(B;A)))","right": "(A)"},
        {"left": "(and(or(A;B);A))","right": "(A)"},
        {"left": "(or(and(A;B);A))","right": "(A)"},
        {"left": "(and(or(B;A);A))","right": "(A)"},
        {"left": "(or(and(B;A);A))","right": "(A)"}
      ]
    },
    {
      "name": "SetAbsorptionLawExtension",
      "type": "set",
      "rules":[
        {"left": "(A)","right": "(and(A;or(A;B)))"},
        {"left": "(A)","right": "(or(A;and(A;B)))"}
      ]
    },
    {
      "name": "SetEmptyAndUniverse",
      "type": "set",
      "rules":[
        {"left": "(or(A;not(A)))","right": "(1)"},
        {"left": "(or(not(A);A))","right": "(1)"},
        {"left": "(and(A;not(A)))","right": "(0)"},
        {"left": "(and(not(A);A))","right": "(0)"},
        {"left": "(or(A;1))","right": "(1)"},
        {"left": "(or(1;A))","right": "(1)"},
        {"left": "(and(A;1))","right": "(A)"},
        {"left": "(and(1;A))","right": "(A)"},
        {"left": "(or(A;0))","right": "(A)"},
        {"left": "(or(0;A))","right": "(A)"},
        {"left": "(and(A;0))","right": "(0)"},
        {"left": "(and(0;A))","right": "(0)"},

        {"left": "(set-(A;0))","right": "(A)"},
        {"left": "(set-(A;1))","right": "(0)"},
        {"left": "(set-(0;A))","right": "(0)"},
        {"left": "(set-(1;A))","right": "(not(A))"},

        {"left": "(implic(0;A))","right": "(1)"},
        {"left": "(implic(A;1))","right": "(1)"},
        {"left": "(implic(A;0))","right": "(not(A))"},
        {"left": "(implic(1;A))","right": "(A)"},

        {"left": "(not(0))","right": "(1)"},
        {"left": "(not(1))","right": "(0)"},

        {"rulePack": "SetEmptyAndUniverseExtension"}
      ]
    },
    {
      "name": "SetEmptyAndUniverseExtension",
      "type": "set",
      "rules":[
        {"left": "(A)","right": "(or(A;0))"},
        {"left": "(A)","right": "(and(A;1))"},
        {"left": "(A)","right": "(set-(A;0))"},
        {"left": "(A)","right": "(implic(1;A))"}
      ]
    },
    {
      "name": "SetMultiArgumentAnd",
      "type": "set",
      "rules":[
        {"left": "(and(and(A;B);and(C;D)))","right": "(and(A;B;C;D))"},
        {"left": "(and(A;and(B;C;D)))","right": "(and(A;B;C;D))"},
        {"left": "(and(and(A;B;C);D))","right": "(and(A;B;C;D))"},

        {"left": "(and(A;B;and(C;D)))","right": "(and(A;B;C;D))"},
        {"left": "(and(A;B;C;D))","right": "(and(A;B;and(C;D)))"},
        {"left": "(and(A;and(B;C);D))","right": "(and(A;B;C;D))"},
        {"left": "(and(A;B;C;D))","right": "(and(A;and(B;C);D))"},
        {"left": "(and(and(A;B);C;D))","right": "(and(A;B;C;D))"},
        {"left": "(and(A;B;C;D))","right": "(and(and(A;B);C;D))"},

        {"left": "(and(A;B;C;and(D;E)))","right": "(and(A;B;C;D;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(A;B;C;and(D;E)))"},
        {"left": "(and(A;B;and(C;D);E))","right": "(and(A;B;C;D;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(A;B;and(C;D);E))"},
        {"left": "(and(A;and(B;C);D;E))","right": "(and(A;B;C;D;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(A;and(B;C);D;E))"},
        {"left": "(and(and(A;B);C;D;E))","right": "(and(A;B;C;D;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(and(A;B);C;D;E))"},

        {"left": "(and(A;B;C;D;and(E;F)))","right": "(and(A;B;C;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;B;C;D;and(E;F)))"},
        {"left": "(and(A;B;C;and(D;E);F))","right": "(and(A;B;C;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;B;C;and(D;E);F))"},
        {"left": "(and(A;B;and(C;D);E;F))","right": "(and(A;B;C;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;B;and(C;D);E;F))"},
        {"left": "(and(A;and(B;C);D;E;F))","right": "(and(A;B;C;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;and(B;C);D;E;F))"},
        {"left": "(and(and(A;B);C;D;E;F))","right": "(and(A;B;C;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(and(A;B);C;D;E;F))"}
      ]
    },
    {
      "name": "SetMultiArgumentOr",
      "type": "set",
      "rules":[
        {"left": "(or(or(A;B);or(C;D)))","right": "(or(A;B;C;D))"},
        {"left": "(or(A;or(B;C;D)))","right": "(or(A;B;C;D))"},
        {"left": "(or(or(A;B;C);D))","right": "(or(A;B;C;D))"},

        {"left": "(or(A;B;or(C;D)))","right": "(or(A;B;C;D))"},
        {"left": "(or(A;B;C;D))","right": "(or(A;B;or(C;D)))"},
        {"left": "(or(A;or(B;C);D))","right": "(or(A;B;C;D))"},
        {"left": "(or(A;B;C;D))","right": "(or(A;or(B;C);D))"},
        {"left": "(or(or(A;B);C;D))","right": "(or(A;B;C;D))"},
        {"left": "(or(A;B;C;D))","right": "(or(or(A;B);C;D))"},

        {"left": "(or(A;B;C;or(D;E)))","right": "(or(A;B;C;D;E))"},
        {"left": "(or(A;B;C;D;E))","right": "(or(A;B;C;or(D;E)))"},
        {"left": "(or(A;B;or(C;D);E))","right": "(or(A;B;C;D;E))"},
        {"left": "(or(A;B;C;D;E))","right": "(or(A;B;or(C;D);E))"},
        {"left": "(or(A;or(B;C);D;E))","right": "(or(A;B;C;D;E))"},
        {"left": "(or(A;B;C;D;E))","right": "(or(A;or(B;C);D;E))"},
        {"left": "(or(or(A;B);C;D;E))","right": "(or(A;B;C;D;E))"},
        {"left": "(or(A;B;C;D;E))","right": "(or(or(A;B);C;D;E))"},

        {"left": "(or(A;B;C;D;or(E;F)))","right": "(or(A;B;C;D;E;F))"},
        {"left": "(or(A;B;C;D;E;F))","right": "(or(A;B;C;D;or(E;F)))"},
        {"left": "(or(A;B;C;or(D;E);F))","right": "(or(A;B;C;D;E;F))"},
        {"left": "(or(A;B;C;D;E;F))","right": "(or(A;B;C;or(D;E);F))"},
        {"left": "(or(A;B;or(C;D);E;F))","right": "(or(A;B;C;D;E;F))"},
        {"left": "(or(A;B;C;D;E;F))","right": "(or(A;B;or(C;D);E;F))"},
        {"left": "(or(A;or(B;C);D;E;F))","right": "(or(A;B;C;D;E;F))"},
        {"left": "(or(A;B;C;D;E;F))","right": "(or(A;or(B;C);D;E;F))"},
        {"left": "(or(or(A;B);C;D;E;F))","right": "(or(A;B;C;D;E;F))"},
        {"left": "(or(A;B;C;D;E;F))","right": "(or(or(A;B);C;D;E;F))"}
      ]
    },
    {
      "name": "SetResolution",
      "type": "set",
      "rules":[
        {"rulePack": "SetBase"},

        {"left": "(and(A;B;C))","right": "(and(B;A;C))"},
        {"left": "(and(A;B;C))","right": "(and(C;A;B))"},
        {"left": "(and(A;B;C))","right": "(and(A;C;B))"},
        {"left": "(and(not(A);A;C))","right": "(0)"},
        {"left": "(and(A;not(A);C))","right": "(0)"},
        {"left": "(and(or(A;X);not(A);C))","right": "(and(X;or(A;X);not(A);C))"},
        {"left": "(and(not(A);or(A;X);C))","right": "(and(X;not(A);or(A;X);C))"},
        {"left": "(and(or(not(A);X);A;C))","right": "(and(X;or(not(A);X);A;C))"},
        {"left": "(and(A;or(not(A);X);C))","right": "(and(X;A;or(not(A);X);C))"},
        {"left": "(and(or(A;X);or(not(A);Y);C))","right": "(and(or(X;Y);or(A;X);or(not(A);Y);C))"},
        {"left": "(and(or(not(A);X);or(A;Y);C))","right": "(and(or(X;Y);or(not(A);X);or(A;Y);C))"},
        {"left": "(and(0;B;C))","right": "(0)"},
        {"left": "(and(A;0;C))","right": "(0)"},
        {"left": "(and(A;B;0))","right": "(0)"},

        {"left": "(and(A;B;C;D))","right": "(and(B;A;C;D))"},
        {"left": "(and(A;B;C;D))","right": "(and(C;A;B;D))"},
        {"left": "(and(A;B;C;D))","right": "(and(D;A;B;C))"},
        {"left": "(and(A;B;C;D))","right": "(and(A;C;B;D))"},
        {"left": "(and(A;B;C;D))","right": "(and(A;D;B;C))"},
        {"left": "(and(not(A);A;C;D))","right": "(0)"},
        {"left": "(and(A;not(A);C;D))","right": "(0)"},
        {"left": "(and(or(A;X);not(A);C;D))","right": "(and(X;or(A;X);not(A);C;D))"},
        {"left": "(and(not(A);or(A;X);C;D))","right": "(and(X;not(A);or(A;X);C;D))"},
        {"left": "(and(or(not(A);X);A;C;D))","right": "(and(X;or(not(A);X);A;C;D))"},
        {"left": "(and(A;or(not(A);X);C;D))","right": "(and(X;A;or(not(A);X);C;D))"},
        {"left": "(and(or(A;X);or(not(A);Y);C;D))","right": "(and(or(X;Y);or(A;X);or(not(A);Y);C;D))"},
        {"left": "(and(or(not(A);X);or(A;Y);C;D))","right": "(and(or(X;Y);or(not(A);X);or(A;Y);C;D))"},
        {"left": "(and(0;B;C;D))","right": "(0)"},
        {"left": "(and(A;0;C;D))","right": "(0)"},
        {"left": "(and(A;B;0;D))","right": "(0)"},
        {"left": "(and(A;B;C;0))","right": "(0)"},

        {"left": "(and(A;B;C;D;E))","right": "(and(B;A;C;D;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(C;A;B;D;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(D;A;B;C;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(E;A;B;C;D))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(A;C;B;D;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(A;D;B;C;E))"},
        {"left": "(and(A;B;C;D;E))","right": "(and(A;E;B;C;D))"},
        {"left": "(and(not(A);A;C;D;E))","right": "(0)"},
        {"left": "(and(A;not(A);C;D;E))","right": "(0)"},
        {"left": "(and(or(A;X);not(A);C;D;E))","right": "(and(X;or(A;X);not(A);C;D;E))"},
        {"left": "(and(not(A);or(A;X);C;D;E))","right": "(and(X;not(A);or(A;X);C;D;E))"},
        {"left": "(and(or(not(A);X);A;C;D;E))","right": "(and(X;or(not(A);X);A;C;D;E))"},
        {"left": "(and(A;or(not(A);X);C;D;E))","right": "(and(X;A;or(not(A);X);C;D;E))"},
        {"left": "(and(or(A;X);or(not(A);Y);C;D;E))","right": "(and(or(X;Y);or(A;X);or(not(A);Y);C;D;E))"},
        {"left": "(and(or(not(A);X);or(A;Y);C;D;E))","right": "(and(or(X;Y);or(not(A);X);or(A;Y);C;D;E))"},
        {"left": "(and(0;B;C;D;E))","right": "(0)"},
        {"left": "(and(A;0;C;D;E))","right": "(0)"},
        {"left": "(and(A;B;0;D;E))","right": "(0)"},
        {"left": "(and(A;B;C;0;E))","right": "(0)"},
        {"left": "(and(A;B;C;D;0))","right": "(0)"},

        {"left": "(and(A;B;C;D;E;F))","right": "(and(B;A;C;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(C;A;B;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(D;A;B;C;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(E;A;B;C;D;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(F;A;B;C;D;E))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;C;B;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;D;B;C;E;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;E;B;C;D;F))"},
        {"left": "(and(A;B;C;D;E;F))","right": "(and(A;F;B;C;D;E))"},
        {"left": "(and(not(A);A;C;D;E;F))","right": "(0)"},
        {"left": "(and(A;not(A);C;D;E;F))","right": "(0)"},
        {"left": "(and(or(A;X);not(A);C;D;E;F))","right": "(and(X;or(A;X);not(A);C;D;E;F))"},
        {"left": "(and(not(A);or(A;X);C;D;E;F))","right": "(and(X;not(A);or(A;X);C;D;E;F))"},
        {"left": "(and(or(not(A);X);A;C;D;E;F))","right": "(and(X;or(not(A);X);A;C;D;E;F))"},
        {"left": "(and(A;or(not(A);X);C;D;E;F))","right": "(and(X;A;or(not(A);X);C;D;E;F))"},
        {"left": "(and(or(A;X);or(not(A);Y);C;D;E;F))","right": "(and(or(X;Y);or(A;X);or(not(A);Y);C;D;E;F))"},
        {"left": "(and(or(not(A);X);or(A;Y);C;D;E;F))","right": "(and(or(X;Y);or(not(A);X);or(A;Y);C;D;E;F))"},
        {"left": "(and(0;B;C;D;E;F))","right": "(0)"},
        {"left": "(and(A;0;C;D;E;F))","right": "(0)"},
        {"left": "(and(A;B;0;D;E;F))","right": "(0)"},
        {"left": "(and(A;B;C;0;E;F))","right": "(0)"},
        {"left": "(and(A;B;C;D;0;F))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;0))","right": "(0)"},

        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(B;A;C;D;E;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(C;A;B;D;E;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(D;A;B;C;E;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(E;A;B;C;D;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(F;A;B;C;D;E;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(G;A;B;C;D;E;F))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(A;C;B;D;E;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(A;D;B;C;E;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(A;E;B;C;D;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(A;F;B;C;D;E;G))"},
        {"left": "(and(A;B;C;D;E;F;G))","right": "(and(A;G;B;C;D;E;F))"},
        {"left": "(and(not(A);A;C;D;E;F;G))","right": "(0)"},
        {"left": "(and(A;not(A);C;D;E;F;G))","right": "(0)"},
        {"left": "(and(or(A;X);not(A);C;D;E;F;G))","right": "(and(X;or(A;X);not(A);C;D;E;F;G))"},
        {"left": "(and(not(A);or(A;X);C;D;E;F;G))","right": "(and(X;not(A);or(A;X);C;D;E;F;G))"},
        {"left": "(and(or(not(A);X);A;C;D;E;F;G))","right": "(and(X;or(not(A);X);A;C;D;E;F;G))"},
        {"left": "(and(A;or(not(A);X);C;D;E;F;G))","right": "(and(X;A;or(not(A);X);C;D;E;F;G))"},
        {"left": "(and(or(A;X);or(not(A);Y);C;D;E;F;G))","right": "(and(or(X;Y);or(A;X);or(not(A);Y);C;D;E;F;G))"},
        {"left": "(and(or(not(A);X);or(A;Y);C;D;E;F;G))","right": "(and(or(X;Y);or(not(A);X);or(A;Y);C;D;E;F;G))"},
        {"left": "(and(0;B;C;D;E;F;G))","right": "(0)"},
        {"left": "(and(A;0;C;D;E;F;G))","right": "(0)"},
        {"left": "(and(A;B;0;D;E;F;G))","right": "(0)"},
        {"left": "(and(A;B;C;0;E;F;G))","right": "(0)"},
        {"left": "(and(A;B;C;D;0;F;G))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;0;G))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;F;0))","right": "(0)"},

        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(B;A;C;D;E;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(C;A;B;D;E;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(D;A;B;C;E;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(E;A;B;C;D;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(F;A;B;C;D;E;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(G;A;B;C;D;E;F;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(H;A;B;C;D;E;F;G))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(A;C;B;D;E;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(A;D;B;C;E;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(A;E;B;C;D;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(A;F;B;C;D;E;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(A;G;B;C;D;E;F;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H))","right": "(and(A;H;B;C;D;E;F;G))"},
        {"left": "(and(not(A);A;C;D;E;F;G;H))","right": "(0)"},
        {"left": "(and(A;not(A);C;D;E;F;G;H))","right": "(0)"},
        {"left": "(and(or(A;X);not(A);C;D;E;F;G;H))","right": "(and(X;or(A;X);not(A);C;D;E;F;G;H))"},
        {"left": "(and(not(A);or(A;X);C;D;E;F;G;H))","right": "(and(X;not(A);or(A;X);C;D;E;F;G;H))"},
        {"left": "(and(or(not(A);X);A;C;D;E;F;G;H))","right": "(and(X;or(not(A);X);A;C;D;E;F;G;H))"},
        {"left": "(and(A;or(not(A);X);C;D;E;F;G;H))","right": "(and(X;A;or(not(A);X);C;D;E;F;G;H))"},
        {"left": "(and(or(A;X);or(not(A);Y);C;D;E;F;G;H))","right": "(and(or(X;Y);or(A;X);or(not(A);Y);C;D;E;F;G;H))"},
        {"left": "(and(or(not(A);X);or(A;Y);C;D;E;F;G;H))","right": "(and(or(X;Y);or(not(A);X);or(A;Y);C;D;E;F;G;H))"},
        {"left": "(and(0;B;C;D;E;F;G;H))","right": "(0)"},
        {"left": "(and(A;0;C;D;E;F;G;H))","right": "(0)"},
        {"left": "(and(A;B;0;D;E;F;G;H))","right": "(0)"},
        {"left": "(and(A;B;C;0;E;F;G;H))","right": "(0)"},
        {"left": "(and(A;B;C;D;0;F;G;H))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;0;G;H))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;F;0;H))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;F;G;0))","right": "(0)"},

        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(B;A;C;D;E;F;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(C;A;B;D;E;F;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(D;A;B;C;E;F;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(E;A;B;C;D;F;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(F;A;B;C;D;E;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(G;A;B;C;D;E;F;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(H;A;B;C;D;E;F;G;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(I;A;B;C;D;E;F;G;H))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(A;C;B;D;E;F;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(A;D;B;C;E;F;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(A;E;B;C;D;F;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(A;F;B;C;D;E;G;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(A;G;B;C;D;E;F;H;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(A;H;B;C;D;E;F;G;I))"},
        {"left": "(and(A;B;C;D;E;F;G;H;I))","right": "(and(A;I;B;C;D;E;F;G;H))"},
        {"left": "(and(not(A);A;C;D;E;F;G;H;I))","right": "(0)"},
        {"left": "(and(A;not(A);C;D;E;F;G;H;I))","right": "(0)"},
        {"left": "(and(or(A;X);not(A);C;D;E;F;G;H;I))","right": "(and(X;or(A;X);not(A);C;D;E;F;G;H;I))"},
        {"left": "(and(not(A);or(A;X);C;D;E;F;G;H;I))","right": "(and(X;not(A);or(A;X);C;D;E;F;G;H;I))"},
        {"left": "(and(or(not(A);X);A;C;D;E;F;G;H;I))","right": "(and(X;or(not(A);X);A;C;D;E;F;G;H;I))"},
        {"left": "(and(A;or(not(A);X);C;D;E;F;G;H;I))","right": "(and(X;A;or(not(A);X);C;D;E;F;G;H;I))"},
        {"left": "(and(or(A;X);or(not(A);Y);C;D;E;F;G;H;I))","right": "(and(or(X;Y);or(A;X);or(not(A);Y);C;D;E;F;G;H;I))"},
        {"left": "(and(or(not(A);X);or(A;Y);C;D;E;F;G;H;I))","right": "(and(or(X;Y);or(not(A);X);or(A;Y);C;D;E;F;G;H;I))"},
        {"left": "(and(0;B;C;D;E;F;G;H;I))","right": "(0)"},
        {"left": "(and(A;0;C;D;E;F;G;H;I))","right": "(0)"},
        {"left": "(and(A;B;0;D;E;F;G;H;I))","right": "(0)"},
        {"left": "(and(A;B;C;0;E;F;G;H;I))","right": "(0)"},
        {"left": "(and(A;B;C;D;0;F;G;H;I))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;0;G;H;I))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;F;0;H;I))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;F;G;0;I))","right": "(0)"},
        {"left": "(and(A;B;C;D;E;F;G;H;0))","right": "(0)"}
      ]
    }
  ]
}